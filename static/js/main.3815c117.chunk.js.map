{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalze","msg","Navbar","mode","href","title","id","onClick","tooglemode","htmlFor","togglemodeDanger","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","showAlert","copyText","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3815c117.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalze =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n         \r\n        \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n        <strong>{capitalze(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link, Router } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href = \"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href =\"#\">Home</a>\r\n        </li>\r\n        \r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href =\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.tooglemode} id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'white'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick = {props.togglemodeDanger} id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Danger Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\naboutText: PropTypes.string}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'TextUtiles',\r\n  aboutText: 'About'\r\n  };\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"UpperCase was Clicked.\" + text)\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Coverted To UpperCase successfully.\",\"success\")\r\n\r\n    }\r\n\r\n    const handleDownClick = () => {\r\n        let newText= text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Coverted To LowerCase successfully.\",\"success\")\r\n\r\n\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText= '';\r\n        setText(newText)\r\n        props.showAlert(\"Cleared Text successfully.\",\"success\")\r\n\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces successfully.\",\"success\")\r\n\r\n    }\r\n    const handleCopyClick = ()=>{\r\n        var copyText = document.getElementById(\"mybox\");\r\n        copyText.select();\r\n        navigator.clipboard.writeText(copyText.value);\r\n        props.showAlert(\"Copy to clipboard successfully.\",\"success\")\r\n    }\r\n\r\n    \r\n    const handleOnChange = (event)=>{\r\n\r\n        // console.log(\"UpperCase was Change.\")\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container my-6\" style={{color: props.mode ==='dark'?'white':'#061744'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"mybox\" className=\"form-label\"></label>\r\n                <textarea value={text} className=\"form-control\" style={{backgroundColor: props.mode ==='grey'?'white':'grey',color: props.mode ==='dark'?'white':'#061744'}} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button onClick={handleUpClick} className=\"btn btn-primary\">Convert to Upper Case</button>\r\n            <button onClick={handleDownClick} className=\"btn btn-primary mx-2\">Convert to Lower Case</button>\r\n            <button onClick={handleClearClick} className=\"btn btn-primary mx-2\">Clear Text</button>\r\n            <button onClick={handleCopyClick} className=\"btn btn-primary mx-2\">Copy Text</button>\r\n            <button onClick={handleExtraSpaces} className=\"btn btn-primary mx-2\">Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-5\" style={{color: props.mode ==='dark'?'white':'#061744'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n            <p>{0.008*text.split(\" \").length}Minutes to read.</p>\r\n            \r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter somthing in TextBox to preview it here.'}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport React from \"react\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Wether Dark mode is Enable or Not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const tooglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#061744\";\n      showAlert(\"Dark mode is Enabled.\", \"success\");\n      document.title = \"TextUtiles - Dark Mode\";\n\n      // setInterval(() => {\n      // document.title ='TexUtiles is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title ='Install TextUtiles Now';\n      //   }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is Enabled.\", \"success\");\n      document.title = \"TextUtiles - Light Mode\";\n    }\n  };\n\n  const togglemodeDanger = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#943b3b\";\n      // document.body.style.color = \"white\";\n      showAlert(\"Danger Mode is Enabled.\", \"success\");\n      document.title = \"TextUtiles - Danger Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is Enabled.\", \"success\");\n      document.title = \"TextUtiles - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n\n{/* <Router> */}\n      <Navbar\n        title=\"TextUtiles\"\n        aboutText=\"About\"\n        mode={mode}\n        tooglemode={tooglemode}\n        togglemodeDanger={togglemodeDanger}\n      />\n      <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n\n            {/* <Route path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter Your Text to Analyze Below\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}